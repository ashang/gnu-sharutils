#! /bin/bash

## bootstrap file for sharutils
##
## Copyright (C) 2005-2007, 2009-2011 Free Software Foundation, Inc.
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; either version 3, or (at your option)
## any later version.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##
## You should have received a copy of the GNU General Public License along
## with this program; if not, write to the Free Software Foundation, Inc.,
## 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

## $Id: bootstrap,v 1.62 2011/04/26 19:36:37 bkorb Exp $

# This script is used to insert the current version number into the various
# files that need the current version number, and it inserts the current
# gettext version number into the AM_GNU_GETTEXT_VERSION macro
#
# This script is _NOT_ distributed with the product.  The _only_
# use for this script is to prep a CVS checkout of the sources for
# the initial build.  Once it has been run, it should not be necessary
# to run it again.

root_pid=$$
unset CDPATH
prog=$(basename $0 .sh)
program=$(cd $(dirname $0) ; pwd)/$(basename $0)

die() {
    echo "${prog} failure: $*" >&2
    kill -TERM ${root_pid}
    exit 1
}

init() {
    case $(set -o) in
    (*posix*) set -o posix ;;
    esac

    sharutils_version=$(autoconf -t 'AC_INIT:$2')
    sharutils_eaddr=$(  autoconf -t 'AC_INIT:$3')

    autoconf_version=$(
        autoconf --version | \
            sed -e 's/autoconf.*) *//' -e '1q' )

    gettext_version=$(
        gettext --version | \
            sed -e 's/^gettext .*) *//' -e '1q' )

    automake_version=$(
        automake --version | \
            sed -e 's/^automake .*) *//' -e 's/\([0-9]*\.[0-9]*\)\..*/\1/' -e 1q
        )

    nl='
'
    set -e
}

versioned_files() {
    cd src
    autogen scripts.def
    cd ..
    test -d intl || mkdir intl || die "cannot make intl directory"
    mv NEWS NEWS.tmp
    vline="Version ${sharutils_version} - "$(date '+%B %Y')
    sed "1,5s/^Version .* by /${vline}, by /" NEWS.tmp > NEWS
    rm -f NEWS.tmp

    tag='Language file updates:'
    sed "/^${tag}/,\$d" README > README.tmp
    exec 3>> README.tmp
    echo "${tag}" >&3

    # Isolate all the .po files so that they are not auto-updated
    # every time the autotools are run.
    #
    cd po
    for f in *.po
    do
        cp -fp $f $f-xx
        mv -f $f-xx $f
    done
    fgrep PO-Revision-Date: *.po | \
        sed 's/\.po: *"PO-Revision-Date: */\t/;s/ [0-2][0-9]:.*//' | \
        sort -t$'\t' -k +1 >&3
    exec 3>&-
    cd ..
    mv -f README.tmp README

    exec 3> version.m4
    cat >&3 <<-  _EOVers_
	m4_define([gettext_version],   [${gettext_version}])
	AC_PREREQ([${autoconf_version}])
	_EOVers_

    case "${sharutils_version}" in
    *.*pre* ) echo [DIST_ALPHA=README-alpha] ;;
    *)      echo [DIST_ALPHA=] ;;
    esac >&3
    exec 3>&-

    cat > doc/version.texi <<- _EOVersion_
	@c Do not edit thie file
	@c This is generated by the ${prog} script

	@set UPDATED $(date +'%d %B %Y')
	@set UPDATED-MONTH $(date +'%B %Y')
	@set EDITION ${sharutils_version}
	@set VERSION ${sharutils_version}
	_EOVersion_
}

setup_configure() {
    #  Make sure the gettext version is up to date.  You cannot use the
    #  normal m4_define from version.m4 'cuz the gettext macros are
    #  specially designed to not allow that.  So, we use sed.
    #  While we're messing with it, update the automake version, too.
    #
    sed -i \
        -e "/^AM_INIT_AUTOMAKE/s/(\[[0-9.]*/([${automake_version}/" \
        -e "/^AM_GNU_GETTEXT_VERSION/s/(\[[0-9.]*/([${gettext_version}/" \
        configure.ac

    exec 3> po/LINGUAS
    echo '# Set of available languages:' >&3
    ls -1 po | sed -n 's/\.po$//p' | columns --spread=1 >&3
    exec 3>&-

    find . -type f | xargs chmod ugo-x
    chmod -R go-w .
    chmod a+x tests/*-[1-9] bootstrap

    shar_lib_hdrs=$(ls -1 lib | egrep -v '^(CVS|SCCS)$')
    extra_dist=$'\n## begin sharutils extras\n\nEXTRA_DIST += \\\n'$(
        echo "${shar_lib_hdrs}" | columns -I4 --spread=1 --line=' \')

    if test -x ../gnulib/gnulib-tool
    then glib=$(cd ../gnulib >/dev/null; pwd)/gnulib-tool
    else
      glib=$(which gnulib-tool)
    fi
    test -x "${glib}" || die "cannot locate gnulib-tool"

    gnulib_libs="
	alloca
	dirname
	error
	fdl
	getcwd
	getopt-gnu
	gettext
	inttostr
	malloc-gnu
	mktime
	pathmax
	popen
	quotearg
	realloc-gnu
	stpcpy
	string
	stdlib
	strerror
	strftime
	uname
	unlocked-io
	xalloc
	xgetcwd
	xstrtoimax
"

    autopoint --force
    ${glib} --import ${gnulib_libs} | tee import-log.txt
    echo "${extra_dist}" >> lib/Makefile.am
    test -f fdl.texi && mv fdl.texi doc/.
    AUTOPOINT=true autoreconf --force --install -Wall || true

    chmod ugo-x COPYING INSTALL doc/texinfo.tex
}

update_include_list() {
    cd src

    # Collect all the #include directives and unique-ify them
    #
    ilist=$(
        {
            sed -n 's/^ *#include/#include/p' ../import-log.txt
            echo '#include "error.h"'
	    echo '#include "basename.h"'
	    echo '#include "locale.h"'
	    echo '#include "system.h"'
        } | sort -u)

    # separate them by quoting type:  <> vs. ""
    # and append a backslash to all but the last line.
    # sed(1) requires this for inserting text.
    #
    ilist=$(
        {
            echo "$ilist" | fgrep '<'
            echo ''
            echo "$ilist" | fgrep '"'
        } | sed 's/$/\\/;$s/\\$//')

    # now insert this list into "local.h".
    #
    sed -i "s@^INCLUDE-LIST\$@${ilist}@" local.h
    cd ..
    rm -f import-log.txt
}

PS4='>${FUNCNAME:-bs}> '
init
versioned_files
setup_configure
update_include_list

(exit 0) ; exit

#  Local Variables:
#  mode: shell-script
#  tab-width: 8
#  indent-tabs-mode: nil
#  sh-indentation: 2
#  sh-basic-offset: 2
#  End:
# 
#  end of bootstrap
